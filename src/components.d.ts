/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { categories, dialogs, } from "./components/mobile/mobile-chat/res/view/mobile-dialogs/res/interface/common.interface";
import { Message, } from "./components/mobile/mobile-chat/res/view/mobile-personal/res/interface/common.interface";
import { dialogs as dialogs1, } from "./components/comp/s-adam-contacts/res/interface/common.interface";
import { Message as Message1, } from "./components/comp/s-adam-direct/res/interface/common.interface";
import { logo, navItems, } from "./components/comp/s-adam-navigate/res/interface/common.interface";
export namespace Components {
    interface DialogCard {
        /**
          * карточка диалога
         */
        "mess": any;
        /**
          * карточка диалога
         */
        "theme": "comp" | "mobile";
    }
    interface MessFromMe {
        /**
          * Принимаем сообщения для пользователя
         */
        "message": any;
    }
    interface MessToMe {
        /**
          * Принимаем сообщения от пользователя
         */
        "message": any;
    }
    interface MobileChat {
    }
    interface MobileDialogs {
        /**
          * массив категорий диалогов
         */
        "categories": categories[];
        /**
          * массив сообщений
         */
        "dialogs": dialogs[];
    }
    interface MobilePersonal {
        /**
          * array data personal messages
         */
        "messageMock": Message[];
    }
    interface MyComponent {
    }
    interface PersonalFooter {
    }
    interface SAdamChat {
    }
    interface SAdamContacts {
        /**
          * Массив с элементами диалога
         */
        "dialogs": dialogs[];
    }
    interface SAdamDialogs {
        /**
          * Массив с элементами диалога
         */
        "dialog": any;
    }
    interface SAdamDirect {
        /**
          * Личный диалог
         */
        "message": Message[];
    }
    interface SAdamNavItem {
        /**
          * Иконки навигации
         */
        "navItems": any;
    }
    interface SAdamNavigate {
        /**
          * Логотип
         */
        "logo": logo;
        /**
          * Иконки навигации
         */
        "navItems": navItems[];
    }
    interface SAdamNoChat {
    }
    interface SAdamProfile {
    }
}
declare global {
    interface HTMLDialogCardElement extends Components.DialogCard, HTMLStencilElement {
    }
    var HTMLDialogCardElement: {
        prototype: HTMLDialogCardElement;
        new (): HTMLDialogCardElement;
    };
    interface HTMLMessFromMeElement extends Components.MessFromMe, HTMLStencilElement {
    }
    var HTMLMessFromMeElement: {
        prototype: HTMLMessFromMeElement;
        new (): HTMLMessFromMeElement;
    };
    interface HTMLMessToMeElement extends Components.MessToMe, HTMLStencilElement {
    }
    var HTMLMessToMeElement: {
        prototype: HTMLMessToMeElement;
        new (): HTMLMessToMeElement;
    };
    interface HTMLMobileChatElement extends Components.MobileChat, HTMLStencilElement {
    }
    var HTMLMobileChatElement: {
        prototype: HTMLMobileChatElement;
        new (): HTMLMobileChatElement;
    };
    interface HTMLMobileDialogsElement extends Components.MobileDialogs, HTMLStencilElement {
    }
    var HTMLMobileDialogsElement: {
        prototype: HTMLMobileDialogsElement;
        new (): HTMLMobileDialogsElement;
    };
    interface HTMLMobilePersonalElement extends Components.MobilePersonal, HTMLStencilElement {
    }
    var HTMLMobilePersonalElement: {
        prototype: HTMLMobilePersonalElement;
        new (): HTMLMobilePersonalElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLPersonalFooterElement extends Components.PersonalFooter, HTMLStencilElement {
    }
    var HTMLPersonalFooterElement: {
        prototype: HTMLPersonalFooterElement;
        new (): HTMLPersonalFooterElement;
    };
    interface HTMLSAdamChatElement extends Components.SAdamChat, HTMLStencilElement {
    }
    var HTMLSAdamChatElement: {
        prototype: HTMLSAdamChatElement;
        new (): HTMLSAdamChatElement;
    };
    interface HTMLSAdamContactsElement extends Components.SAdamContacts, HTMLStencilElement {
    }
    var HTMLSAdamContactsElement: {
        prototype: HTMLSAdamContactsElement;
        new (): HTMLSAdamContactsElement;
    };
    interface HTMLSAdamDialogsElement extends Components.SAdamDialogs, HTMLStencilElement {
    }
    var HTMLSAdamDialogsElement: {
        prototype: HTMLSAdamDialogsElement;
        new (): HTMLSAdamDialogsElement;
    };
    interface HTMLSAdamDirectElement extends Components.SAdamDirect, HTMLStencilElement {
    }
    var HTMLSAdamDirectElement: {
        prototype: HTMLSAdamDirectElement;
        new (): HTMLSAdamDirectElement;
    };
    interface HTMLSAdamNavItemElement extends Components.SAdamNavItem, HTMLStencilElement {
    }
    var HTMLSAdamNavItemElement: {
        prototype: HTMLSAdamNavItemElement;
        new (): HTMLSAdamNavItemElement;
    };
    interface HTMLSAdamNavigateElement extends Components.SAdamNavigate, HTMLStencilElement {
    }
    var HTMLSAdamNavigateElement: {
        prototype: HTMLSAdamNavigateElement;
        new (): HTMLSAdamNavigateElement;
    };
    interface HTMLSAdamNoChatElement extends Components.SAdamNoChat, HTMLStencilElement {
    }
    var HTMLSAdamNoChatElement: {
        prototype: HTMLSAdamNoChatElement;
        new (): HTMLSAdamNoChatElement;
    };
    interface HTMLSAdamProfileElement extends Components.SAdamProfile, HTMLStencilElement {
    }
    var HTMLSAdamProfileElement: {
        prototype: HTMLSAdamProfileElement;
        new (): HTMLSAdamProfileElement;
    };
    interface HTMLElementTagNameMap {
        "dialog-card": HTMLDialogCardElement;
        "mess-from-me": HTMLMessFromMeElement;
        "mess-to-me": HTMLMessToMeElement;
        "mobile-chat": HTMLMobileChatElement;
        "mobile-dialogs": HTMLMobileDialogsElement;
        "mobile-personal": HTMLMobilePersonalElement;
        "my-component": HTMLMyComponentElement;
        "personal-footer": HTMLPersonalFooterElement;
        "s-adam-chat": HTMLSAdamChatElement;
        "s-adam-contacts": HTMLSAdamContactsElement;
        "s-adam-dialogs": HTMLSAdamDialogsElement;
        "s-adam-direct": HTMLSAdamDirectElement;
        "s-adam-nav-item": HTMLSAdamNavItemElement;
        "s-adam-navigate": HTMLSAdamNavigateElement;
        "s-adam-no-chat": HTMLSAdamNoChatElement;
        "s-adam-profile": HTMLSAdamProfileElement;
    }
}
declare namespace LocalJSX {
    interface DialogCard {
        /**
          * карточка диалога
         */
        "mess"?: any;
        /**
          * clock on navigate
         */
        "onClickToLink"?: (event: CustomEvent<any>) => void;
        /**
          * карточка диалога
         */
        "theme"?: "comp" | "mobile";
    }
    interface MessFromMe {
        /**
          * Принимаем сообщения для пользователя
         */
        "message"?: any;
    }
    interface MessToMe {
        /**
          * Принимаем сообщения от пользователя
         */
        "message"?: any;
    }
    interface MobileChat {
    }
    interface MobileDialogs {
        /**
          * массив категорий диалогов
         */
        "categories"?: categories[];
        /**
          * массив сообщений
         */
        "dialogs"?: dialogs[];
        /**
          * clock on Category
         */
        "onClickToCategory"?: (event: CustomEvent<any>) => void;
        /**
          * clock on clickToLink
         */
        "onClickToLink"?: (event: CustomEvent<any>) => void;
    }
    interface MobilePersonal {
        /**
          * array data personal messages
         */
        "messageMock"?: Message[];
        /**
          * clock on navigate
         */
        "onClickToLink"?: (event: CustomEvent<any>) => void;
    }
    interface MyComponent {
    }
    interface PersonalFooter {
        /**
          * clock on navigate
         */
        "onClickToLink"?: (event: CustomEvent<any>) => void;
    }
    interface SAdamChat {
    }
    interface SAdamContacts {
        /**
          * Массив с элементами диалога
         */
        "dialogs"?: dialogs[];
        /**
          * Событие для переключения пустой страницы на личный чат
         */
        "onClickToLink"?: (event: CustomEvent<any>) => void;
    }
    interface SAdamDialogs {
        /**
          * Массив с элементами диалога
         */
        "dialog"?: any;
        /**
          * Событие для переключения пустой страницы на личный чат
         */
        "onToggleChat"?: (event: CustomEvent<any>) => void;
    }
    interface SAdamDirect {
        /**
          * Личный диалог
         */
        "message"?: Message[];
        /**
          * клик по имени юзера в личной переписке
         */
        "onClickOnUsername"?: (event: CustomEvent<any>) => void;
    }
    interface SAdamNavItem {
        /**
          * Иконки навигации
         */
        "navItems"?: any;
    }
    interface SAdamNavigate {
        /**
          * Логотип
         */
        "logo"?: logo;
        /**
          * Иконки навигации
         */
        "navItems"?: navItems[];
    }
    interface SAdamNoChat {
    }
    interface SAdamProfile {
    }
    interface IntrinsicElements {
        "dialog-card": DialogCard;
        "mess-from-me": MessFromMe;
        "mess-to-me": MessToMe;
        "mobile-chat": MobileChat;
        "mobile-dialogs": MobileDialogs;
        "mobile-personal": MobilePersonal;
        "my-component": MyComponent;
        "personal-footer": PersonalFooter;
        "s-adam-chat": SAdamChat;
        "s-adam-contacts": SAdamContacts;
        "s-adam-dialogs": SAdamDialogs;
        "s-adam-direct": SAdamDirect;
        "s-adam-nav-item": SAdamNavItem;
        "s-adam-navigate": SAdamNavigate;
        "s-adam-no-chat": SAdamNoChat;
        "s-adam-profile": SAdamProfile;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "dialog-card": LocalJSX.DialogCard & JSXBase.HTMLAttributes<HTMLDialogCardElement>;
            "mess-from-me": LocalJSX.MessFromMe & JSXBase.HTMLAttributes<HTMLMessFromMeElement>;
            "mess-to-me": LocalJSX.MessToMe & JSXBase.HTMLAttributes<HTMLMessToMeElement>;
            "mobile-chat": LocalJSX.MobileChat & JSXBase.HTMLAttributes<HTMLMobileChatElement>;
            "mobile-dialogs": LocalJSX.MobileDialogs & JSXBase.HTMLAttributes<HTMLMobileDialogsElement>;
            "mobile-personal": LocalJSX.MobilePersonal & JSXBase.HTMLAttributes<HTMLMobilePersonalElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "personal-footer": LocalJSX.PersonalFooter & JSXBase.HTMLAttributes<HTMLPersonalFooterElement>;
            "s-adam-chat": LocalJSX.SAdamChat & JSXBase.HTMLAttributes<HTMLSAdamChatElement>;
            "s-adam-contacts": LocalJSX.SAdamContacts & JSXBase.HTMLAttributes<HTMLSAdamContactsElement>;
            "s-adam-dialogs": LocalJSX.SAdamDialogs & JSXBase.HTMLAttributes<HTMLSAdamDialogsElement>;
            "s-adam-direct": LocalJSX.SAdamDirect & JSXBase.HTMLAttributes<HTMLSAdamDirectElement>;
            "s-adam-nav-item": LocalJSX.SAdamNavItem & JSXBase.HTMLAttributes<HTMLSAdamNavItemElement>;
            "s-adam-navigate": LocalJSX.SAdamNavigate & JSXBase.HTMLAttributes<HTMLSAdamNavigateElement>;
            "s-adam-no-chat": LocalJSX.SAdamNoChat & JSXBase.HTMLAttributes<HTMLSAdamNoChatElement>;
            "s-adam-profile": LocalJSX.SAdamProfile & JSXBase.HTMLAttributes<HTMLSAdamProfileElement>;
        }
    }
}
